/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 15.04.0 ] */

/* [wxMaxima: title   start ]
Конкретные параметры
   [wxMaxima: title   end   ] */

/* [wxMaxima: comment start ]
Чтобы проинтегрировать полученные уравнения для nu и получить траектории экипажа на плоскости, нужно:

1) добавить уравнения для chi и для x, y, theta,
2) подставить конкрентые значения параметров,
3) задать начальные условия.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
rhs_nu: rhs $
rhs_chi: _V_chi . transpose(makelist(nu[i], i, 1, 3)) $
rhs_coords: (submatrix(4, 5, 6, 7, 8, 9, _V) . genmatrix(lambda([i, j], nu[i]), 3, 1)) where [ theta = _theta ] $
rhs_phi: (submatrix(1, 2, 3, 4, 5, 6, _V) . genmatrix(lambda([i, j], nu[i]), 3, 1)) where [ theta = _theta ] $
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
чтобы получить реалистичные значения параметров, см. 1_1_params_helper.wxm
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
_chi_max: %pi/4 $
_chi_max_adjust: %pi/4 $

real_params_nosimp: [
    alpha[1] = 0,
    alpha[2] = 2*%pi/3,
    alpha[3] = 4*%pi/3,
    R = 1,
    B = 1,
    Lambda = 1,

    /* wheel geometry */
    chi_max = _chi_max,
    l = 1,
    
    /* mass */
    M = 1,
    J = 1,
    I_S = 1

];

real_params_zero_theta: append(real_params_nosimp, [ 
    theta = 0 /* looks like theta only appears as part of sin^2(theta) + cos^2(theta)
                 (ONLY IN EQUATIONS FOR nu[i] and chi[i])
                 which Maxima fails to replace with 1 without trigsimp */
]) $

real_params: append(real_params_nosimp, [ trigsimp, expand ]) $
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
для Maxima также нужно имена переменных записать без индексов (т.е. nu[i] заменить на, например, nui),
а chi[i] рассматривать по модулю угла раствора ролика 2*chi_max
(причем ещё их нужно сместить на chi_max, чтобы при переходе через chi_max chi становилось равным -chi_max,
а начальные условия для chi сместить противоположно)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
/* the way this should not be done :) */
/* adjust(chi) := if abs(chi) < _chi_max_adjust then chi else (mod(chi - _chi_max_adjust, 2*_chi_max_adjust)) - _chi_max_adjust; */

adjust(chi) := mod(chi - _chi_max_adjust, 2*_chi_max_adjust) - _chi_max_adjust;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
subst_stuff_and_params(expr, _params) := expr
    where ((rho[i] = rho(i)) forall [i, makelist(i, i, 1, 3)])
    where [ r = l*cos(chi_max) ]
    where _params
$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
subst_stuff(expr) := subst_stuff_and_params(expr, real_params) $

/* RHS are matrices, but we should make lists */
real_life(expr) := transpose(expr
    where [ subst_stuff ]
    where [ 
        nu[1] = nu1, 
        nu[2] = nu2, 
        nu[3] = nu3, 
        chi[1] = adjust(chi1), 
        chi[2] = adjust(chi2), 
        chi[3] = adjust(chi3),
        phi[1] = phi1, 
        phi[2] = phi2, 
        phi[3] = phi3 
    ]
    /* where [ lambda([ex], float(ex)) ] */
)[1]
$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Чтобы получить правую часть уравнений для nu, нужно подставить реальные параметры,
но trigsimp и expand работают бесконечно долго на M_star_inverse . rhs_omni,
поэтому для nu просто подставим theta = 0:
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
real_life_zero_theta(expr) := transpose(expr
    where [ lambda([ex], subst_stuff_and_params(ex, real_params_zero_theta)) ]
    where [ 
        nu[1] = nu1, 
        nu[2] = nu2, 
        nu[3] = nu3, 
        chi[1] = adjust(chi1), 
        chi[2] = adjust(chi2), 
        chi[3] = adjust(chi3),
        phi[1] = phi1, 
        phi[2] = phi2, 
        phi[3] = phi3 
    ]
    /* where [ lambda([ex], float(ex)) ] */
)[1]
$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Если интегрировать phi вместе с остальными уравнениями, солвер не выдерживает.
Чтобы была возможность хоть как-то посмотреть на них, не будем делать сдвиг по chi:
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
real_life_noadjust(expr) := transpose(expr
    where [ subst_stuff ]
    where [ 
        nu[1] = nu1, 
        nu[2] = nu2, 
        nu[3] = nu3, 
        chi[1] = chi1, 
        chi[2] = chi2, 
        chi[3] = chi3,
        phi[1] = phi1, 
        phi[2] = phi2, 
        phi[3] = phi3 
    ]
    /* where [ lambda([ex], float(ex)) ] */
)[1]
$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
/* for debugging */
/* uncomment this cell and replace $ with ; to check stuff */

/*
real_life(rhs_chi) $

subst_stuff(rhs_omni_gen[1]) $

subst_stuff(_M_star_inverse[1][1]) $

subst_stuff(rhs_nu[1]) where [
    chi1 = 0,
    chi2 = 0,
    chi3 = 0
] $

rhs_coords $

append(real_life(rhs_nu), real_life(rhs_chi), real_life(rhs_coords)) $
*/
print() $
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
