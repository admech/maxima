/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 15.04.0 ] */

/* [wxMaxima: title   start ]
Функции для интегрирования
   [wxMaxima: title   end   ] */

/* [wxMaxima: comment start ]
будем явно задавать начальные условия только для nu[i] (и выбирать время окончания и шаг),
полагая начальные значения для chi[i] и координат нулевыми
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
omni_solve_extended(
    nu1_0, nu2_0, nu3_0, 
    chi1_0, chi2_0, chi3_0, 
    x_0, y_0, _theta_0,
    phi1_0, phi2_0, phi3_0,
    t0, t1, t_step
) := rk(
    (append(rhs_nu, rhs_chi, rhs_coords, rhs_phi) where ultimate_params(N_wheels, n_rollers)),
    [ nu1,   nu2,   nu3,   chi1,   chi2,   chi3,   x,   y,   _theta,   phi1,   phi2,   phi3   ],
    [ nu1_0, nu2_0, nu3_0, chi1_0, chi2_0, chi3_0, x_0, y_0, _theta_0, phi1_0, phi2_0, phi3_0 ],
    [ t, t0, t1, t_step]
) $

omni_solve(
    nu1_0, nu2_0, nu3_0, 
    t1, t_step
) := omni_solve_extended(
    nu1_0, nu2_0, nu3_0, 
    0, 0, 0, 
    0, 0, 0,
    0, 0, 0,
    0, t1, t_step
) $

omni_solve_next(sol, t1) := block([last_point],
    last_point: last(sol),
    omni_solve_extended(
        last_point[2], last_point[3], last_point[4], 
        last_point[5], last_point[6], last_point[7], 
        last_point[8], last_point[9], last_point[10], 
        last_point[11], last_point[12], last_point[13],
        last_point[1], t1, (last_point[1] - first(sol)[1])/(length(sol) - 1)
    )
) $
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
