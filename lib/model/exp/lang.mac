require@timing() $
require@omni_with_rollers_wheelutil() $
require@omni_with_rollers_symbols() $
require@omni_with_rollers_equations() $
require@omni_with_rollers() $

print( perwheel(x^2, x)  ) $
print( perroller(y^3, y) ) $


print(q) $
print(diff(q, t)) $

print(q) $
print(nu) $
print(len_q, len_nu) $

/* print(perwheel([chi[i], rho[i]], i)) $ */
/* print(makelist(rho[i], i, 1, 3)) $ */
print(perwheel(rho(i), i)) $

print( perfree([i,j], i, j) ) $
print( perfree(freephi(i,j), i, j) ) $

print( perfree(index_of_free_roller(i,j), i, j)) $
print( perfree(s(i,j), i, j)) $

printlist(
	    [
	        diff(x, t) = R*cos(theta)*nu[1] - R*sin(theta)*nu[2],
	        diff(y, t) = R*sin(theta)*nu[1] + R*cos(theta)*nu[2],
	        diff(theta, t) = 1/Lambda * nu[3]
	    ]
) $



printlist(constraints) $



display(_V) $



_M_no_third_row : submatrix(3, _M) $
display(_M_no_third_row) $ /* row 3 does not fit */
display(_M[3]) $



_M_star_3: apply(submatrix, append(
	pers3(i, i),
	[ _M_star ],
	pers3(i, i)
)) $
display(_M_star_3) $
print(
	apply(submatrix, append(
		perbignu(i, i),
		[ _M_star ],
		perbignu(i, i)
	))
) $
print(
	apply(submatrix, append(
		pers3(i, i),
		[ _M_star ],
		perbignu(i, i)
	))
) $
print(
	apply(submatrix, append(
		perbignu(i, i),
		[ _M_star ],
		pers3(i, i)
	))
) $



display(L_star) $


print(perq(p(i), i)) $
print(pernu(P(i), i)) $
print(_p) $
printlist(_P) $
printlist(_pnu) $

display(z) $

print(poiz(_P[1], _P[2])) $

log_3hr() $
display(_D_M_star_dt_dot_nu) $

log_3hr() $
display(subst_ps) $
display(_pois_P_L_star) $
print(listofvars(_pois_P_L_star)) $

log_3hr() $
display(_sum_pois_P_alpha_P_mu_nu_mu) $

log_3hr() $
print(length(_rhs_nu)) $
print(listofvars(_rhs_nu)) $
display(_rhs_chi) $
display(_rhs_coords) $


log_3hr() $
display(real(params)) $

timeit_start() $
vars_in_rhss: listofvars(
	append( _rhs_nu,      _rhs_chi,             _rhs_coords   ) where real(params)
) $
print(vars_in_rhss) $
timeit_show() $


print(solvable_vars(params)) $
print(vars_in_rhss where solvable_vars(params)) $
