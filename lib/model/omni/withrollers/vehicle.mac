require@model() $
require@switching() $
require@wheelutil() $
require@omni_with_rollers_params() $
require@omni_with_rollers_symbols() $
require@omni_with_rollers_equations() $
require@omni_with_rollers_cases() $

init() := block(

	/* TECHNICAL STUFF */

	solvable_vars() := append(
		pernu(nu[i] = concat(_rk_nu, "_", i), i),
		perwheel(chi(i) = concat(_rk_chi, "_", i), i)
	),

	all_vars_solved_for() := append(
		map(second, solvable_vars()),
		[x, y, theta]
	),

	/* SWITCHING ROLLERS */

	_rhs_chi_switching: switching(
		_rhs_chi,
		perwheel(chi(i), i) where solvable_vars(),
		beyond(_chi_max_adjust)
	),

	/* DECLARING THE MODEL: RHSS, REAL PARAMS AND PLOT VARS */

	OmniVehicle(params, initials, domain) := new(Model(
		sconcat("Omni vehicle with rollers (params: ", params, ", initials: ", initials, ", domain: ", domain),
		new(RKAdapter(
			append( _rhs_nu,      _rhs_chi_switching,   _rhs_coords     ) where append( real(params), solvable_vars() ),
			append( nu,           perwheel(chi(i), i),  [x, y, theta]   ) where solvable_vars(),
			append( initials@nu,  initials@chi,         initials@coords ),
			domain
		)),
		[
			new(PlotGroup(
				"coords",
				[
					new(PlotVar("x(t)", [p] -> [ p[1], p[1 + len_nu + params@N_wheels + 1] ])),
					new(PlotVar("y(t)", [p] -> [ p[1], p[1 + len_nu + params@N_wheels + 2] ]))
				],
				no_postamble,
				[ "t", "coord" ]
			)),
			new(PlotGroup(
				"self rotation",
				[
					new(PlotVar("θ(t)", [p] -> [ p[1], p[1 + len_nu + params@N_wheels + 3] ]))
				],
				no_postamble,
				[ "t", "θ" ]
			)),
			new(PlotGroup(
				"trajectory",
				[
					new(PlotVar("y(x)", [p] -> [ p[1 + len_nu + params@N_wheels + 1], p[1 + len_nu + params@N_wheels + 2] ]))
				],
				equal_axes,
				[ "x", "y" ]
			)),
			new(PlotGroup(
				"wheel angles",
				append(
					perwheel(
						new(PlotVar(
							concat("χ_", i, "(t)"),
							[p] -> [ p[1], p[1 + len_nu + i] ]
						)),
						i
					),
					[
						new(PlotVar("+ χ_{max}", [p] -> [ p[1],  _chi_max_adjust ])),
						new(PlotVar("- χ_{max}", [p] -> [ p[1], -_chi_max_adjust ]))
					]
				),
				no_postamble,
				[ "t", "χ" ]
			))
		]
	))

) $
