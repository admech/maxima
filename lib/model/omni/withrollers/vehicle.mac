require@logging() $
require@model() $
require@switching() $
require@wheelutil() $
require@omni_with_rollers_params() $
require@omni_with_rollers_symbols() $
require@omni_with_rollers_equations() $
require@omni_with_rollers_cases() $
require@omni_with_rollers_shift() $

init() := block(
	vlog: get_logger("vehicle", log_level_info),

	/* TECHNICAL STUFF */

	solvable_vars() := append(
		pernu(nu[i] = concat(_rk_nu, "_", i), i),
		perwheel(chi(i) = concat(_rk_chi, "_", i), i),
		perfree(freephi(i,j) = concat(_rk_phi, "_", i, "_", j), i, j)
	),

	all_vars_solved_for() := append(
		map(second, solvable_vars()),
		[x, y, theta]
	),

	/* SWITCHING ROLLERS */

	_rhs_chi_switching: switching(
		_rhs_chi,
		perwheel(chi(i), i) where solvable_vars(),
		beyond(_chi_max_adjust)
	),

	renumber_rollers(coords) := block(
		vlog@info("switching"),
		append(
			extract_big_nus(coords),
			extract_free_nus(coords) where [ shift_vars(rollers(), coords) ],
			extract_chis(coords) where [ adjust_chis ],
			extract_free_phis(coords) where [ shift_vars(phis(), coords) ],
			extract_coords(coords)
		)
	),

	/* DECLARING THE MODEL: RHSS, REAL PARAMS AND PLOT VARS */

	OmniVehicle(params, initials, domain) := new(SwitchingModel(
		sconcat("Omni vehicle with rollers (params: ", params, ", initials: ", initials, ", domain: ", domain),
		new(RKAdapter(
			append( _rhs_nu,      _rhs_chi_switching,   _rhs_phi,                          _rhs_coords     ) where append( real(params), solvable_vars() ),
			append( nu,           perwheel(chi(i), i),  perfree(freephi(i, j), i, j),      [x, y, theta]   ) where solvable_vars(),
			append( initials@nu,  initials@chi,         perfree(0, i, j),                  initials@coords ),
			domain
		)),
		new(Switcher(
			renumber_rollers,
			append( _rhs_nu,      _rhs_chi,             _rhs_phi,                          _rhs_coords     ) where append( real(params), solvable_vars() )
		)),
		append(
			[
				new(PlotGroup(
					"coords",
					[
						new(PlotVar("x(t)", [p] -> [ time(p), extract_x(coords(p)) ])),
						new(PlotVar("y(t)", [p] -> [ time(p), extract_y(coords(p)) ]))
					],
					no_postamble,
					[ "t", "coord" ]
				)),
				new(PlotGroup(
					"self rotation", /* θ - not supported in console */
					[
						new(PlotVar("theta(t)", [p] -> [ time(p), extract_theta(coords(p)) ]))
					],
					no_postamble,
					[ "t", "theta" ]
				)),
				new(PlotGroup(
					"trajectory",
					[
						new(PlotVar("y(x)", [p] -> [ extract_x(coords(p)), extract_y(coords(p)) ]))
					],
					equal_axes,
					[ "x", "y" ]
				)),
				new(PlotGroup(
					"wheel angles", /* χ - not supported in console */
					append(
						perwheel(
							new(PlotVar(
								concat("chi_", i, "(t)"),
								[p] -> [ time(p), extract_chi(i, coords(p)) ]
							)),
							i
						),
						[
							new(PlotVar("+ chi_{max}", [p] -> [ time(p),  _chi_max_adjust ])),
							new(PlotVar("- chi_{max}", [p] -> [ time(p), -_chi_max_adjust ]))
						]
					),
					no_postamble,
					[ "t", "chi" ]
				))
			],
			perwheel(
				new(PlotGroup(
					concat("free rollers of wheel ", i),
					per_free_roller(
						new(PlotVar(concat("phi_{", i, ", ", j, "}(t)"), [p] -> [ time(p), extract_free_phi(i, j, coords(p)) ])),
						j
					),
					no_postamble,
					[ "t", "phi" ]
				)),
				i
			)
		)
	))

) $
