/*
	Modules are needed to isolate namespaces and to manage dependencies.
	(note: dependencies of module.mac are loaded with batchload).
*/
print("______________________________") $
print("______________________________") $
print("______________________________") $
print("") $

batchload("util/lang/extensions.mac") $
batchload("util/infra/env.mac") $
batchload("util/lang/module.mac") $

require@logging() $
require@pipeline() $
require@model() $

log : get_logger("main", log_level_info) $

log@debug(hr()) $

log_program_start() $

/*
require@lotka_volterra() $
run(
	LotkaVolterra(
		2/3, 4/3, 1, 1,
		1.8, 1.8
	), 
	new(Pipeline(
		solver@batch([ 1 ]),
		plot@files_in(dir(out_dir))
	))
) $
*/

/*               viscosity, wall_coord,  v0,   t1,  t_step   */
/*
require@billiard() $
model: Billiard( 0.05,      100,         100,  120, 0.01    ) $
run(
	model,
	new(Pipeline(
		solver@batch(
			[ 20, 50, 120 ],
			with_switcher(model@switcher)
		),
		plot@windows
	))
) $
*/


log@info("Loading model...") $
require@omni_with_rollers() $
log@info("Done loading model.") $


log@info("Initializing model...") $
omni_vehicle: OmniVehicle(
	params,
	case_of_motion@self_rot(-1) where [ gonna_switch_in(0.1) ],
	new(Domain( 0, 0.2, 0.01 ))
) $
log@info("Done initializing model.") $


run(
	omni_vehicle, 
	new(Pipeline(
		solver@batch(
			[ 0.1, 0.2 ],
			with_switcher(omni_vehicle@switcher)
		),
		plot@console
	))
) $


/*
	TODO:
		* expose params
		* arrange the layout: where goes the lib, where the params files, where the results (the latter two - together ?)
		* check that we can actually set a different number of rollers / wheels
*/

/*
batchload("model/exp/lang.mac") $
*/


log_program_finish() $



