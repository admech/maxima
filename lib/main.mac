/*
	Modules are needed to isolate namespaces and to manage dependencies.
	(note: dependencies of module.mac are loaded with batchload).
*/
print("______________________________") $
print("______________________________") $
print("______________________________") $
print("") $

batchload("util/lang/extensions.mac") $
batchload("util/infra/env.mac") $
batchload("util/lang/module.mac") $

require@logging() $
require@pipeline() $
require@model() $

log : get_logger("main", log_level_info) $

log@debug(hr()) $

log_program_start() $

/*
require@lotka_volterra() $
run(
	LotkaVolterra(
		2/3, 4/3, 1, 1,
		1.8, 1.8
	), 
	new(Pipeline(
		solver@batch([ 1 ]),
		plot@files_in(out_dir)
	))
) $
*/

/*               viscosity, wall_coord,  v0,   t1,  t_step   */
/*
require@billiard() $
model: Billiard( 0.05,      100,         100,  120, 0.01    ) $
run(
	model,
	new(Pipeline(
		solver@batch(
			[ 20, 50, 120 ],
			with_switcher(model@switcher)
		),
		plot@windows
	))
) $
*/


DEFAULT_SIMULATION_PARAMETERS : [
	[ " batches   ", " makelist(0.1*i, i, 1, 2)        " ],
	[ " step      ", " 0.01                            " ],

	[ " nu_0      ", " [ 0, 0, -1 ]                    " ],
	[ " chi_0     ", " makelist( %pi/4 - 0.1, i, 1, 3) " ],
	[ " coords_0  ", " [ 0, 0, 0 ]                     " ],

	[ " N_wheels  ", " 3                               " ],
	[ " n_rollers ", " 4                               " ],
	[ " r_hub     ", " 0.05                            " ],
	[ " M_hub     ", " 0.15                            " ],
	[ " m_roller  ", " 0.05                            " ],
	[ " R_platf   ", " 0.15                            " ],
	[ " M_platf   ", " 1                               " ]
] $

log@info("Loading model...") $
/*
load_simulation_parameters_from_file() $
*/
use_default_simulation_parameters() $
require@omni_with_rollers() $
log@info("Done loading model.") $

log@info("Initializing model...") $
omni_vehicle: OmniVehicle(
	params,
	/*
	case_of_motion@self_rot(-1) where [ gonna_switch_in(0.1) ],
	*/
	new(OmniInitials(
		append(get_global("nu_0"), makelist(0, i, len_nu - 3)),
		get_global("chi_0"),
		get_global("coords_0")
	)),
	new(Domain( 0, 0.2, get_global("step") ))
) $
log@info("Done initializing model.") $


run(
	omni_vehicle, 
	new(Pipeline(
		solver@batch(
			get_global("batches"),
			with_switcher(omni_vehicle@switcher)
		),
		/* plot@files_in(out_dir) */
		plot@windows
	))
) $


/*
batchload("model/exp/lang.mac") $
*/


log_program_finish() $



