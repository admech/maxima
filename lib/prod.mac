print("______________________________") $
print("______________________________") $
print("______________________________") $
print("") $

batchload("util/lang/extensions.mac") $
batchload("util/infra/env.mac") $
batchload("util/lang/module.mac") $

require@logging() $
require@pipeline() $
require@model() $

log : get_logger("main", log_level_info) $

log@debug(hr()) $

log_program_start() $

DEFAULT_SIMULATION_PARAMETERS : [
	[ " batches   ", " [ 0.1, 0.2 ]                                               " ],
	[ " step      ", " 0.01                                                       " ],

	[ " N_wheels  ", " 3                                                          " ],
	[ " n_rollers ", " 4                                                          " ],
	[ " r_hub     ", " 0.05                                                       " ],
	[ " M_hub     ", " 0.15                                                       " ],
	[ " m_roller  ", " 0.05                                                       " ],
	[ " R_platf   ", " 0.15                                                       " ],
	[ " M_platf   ", " 1                                                          " ],

	[ " coords_0  ", " [ 0, 0, 0 ]                                                " ],
	[ " nu_0      ", " [ 0, 0, -1 ]                                               " ],
	[ " nu_s_0    ", " makelist(0, i, gg(\"N_wheels\") * (gg(\"n_rollers\") - 1)) " ],
	[ " chi_0     ", " makelist( %pi/4 - 0.1, i, 1, gg(\"N_wheels\"))             " ]

] $

linel : 16000 $
gnuplot_command : "gnuplot" $

log@info("Loading model...") $
load_simulation_parameters_from_file() $
eval_string(concat("require@", get_global("model"), "()")) $
log@info("Done loading model.") $

log@info("Initializing model...") $
omni_vehicle: OmniVehicle(
	params,
	new(OmniInitials(
		append(get_global("nu_0"), get_global("nu_s_0")),
		get_global("chi_0"),
		get_global("coords_0")
	)),
	new(Domain( 0, 0.2, get_global("step") )),
        get_global("how_to_switch")
) $
log@info("Done initializing model.") $


run(
	omni_vehicle, 
	new(Pipeline(
		solver@batch(
			get_global("batches"),
			with_switcher(omni_vehicle@switcher)
		),
		/*
		plot@files_in(out_dir)
		*/
		plot@these([
			plot@dumping_points_to_file_in(out_dir),
			plot@files_in(out_dir)
		])
	))
) $

log_program_finish() $



