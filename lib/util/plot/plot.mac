init() := block(
	[
		log : get_logger("plot", log_level_info)
	],
	
	defstruct(
		Plot(
			devnull,
			list,
			windows,
			console
		)
	),
	plot : new(Plot),

	defstruct(
		Output(
			name,
			show
		)
	),

	plot@devnull : new(Output(
		"sending to /dev/null",
		buildq([log],
			lambda([sol, plot_vars],
				log@info("plot > /dev/null")
			)
		)
	)),

	plot@list : new(Output(
		"listing the solution into the console",
		buildq([log],
			lambda([sol, plot_vars],
				block(
					log@info("Solution:"),
					for p in sol do log@info(p),
					log@info("End of solution.")
				)
			)
		)
	)),

	plot@windows : new(Output(
		"plotting in windows",
		buildq([log],
			lambda([sol, plot_vars],
				block(
					log@info("Gnuplotting to QT window..."),
					plot2d (
						makelist(
							[ discrete, makelist(var(p), p, sol) ],
							var, plot_vars
						),
						[ gnuplot_preamble, "set terminal qt persist" ]
					)
				)
			)
		)
	)),

	plot@console : new(Output(
		"plotting in the console",
		buildq([log],
			lambda([sol, plot_vars],
				block(
					log@info("Gnuplotting to console..."),
					plot2d (
						makelist(
							[ discrete, makelist(var(p), p, sol) ],
							var, plot_vars
						),
						[ gnuplot_term, dumb ]
					)
				)
			)
		)
	))

) $