print("______________________________") $
print("______________________________") $
print("______________________________") $
print("") $

batchload("util/lang/extensions.mac") $
batchload("util/infra/env.mac") $
batchload("util/lang/module.mac") $

require@logging() $
require@pipeline() $
require@model() $

log : get_logger("main", log_level_info) $

log@debug(hr()) $

log_program_start() $

DEFAULT_SIMULATION_PARAMETERS : [
	[ " batches   ", " [ 0.1, 0.2 ]                    " ],
	[ " step      ", " 0.01                            " ],

	[ " nu_0      ", " [ 0, 0, -1 ]                    " ],
	[ " chi_0     ", " makelist( %pi/4 - 0.1, i, 1, 3) " ],
	[ " coords_0  ", " [ 0, 0, 0 ]                     " ],

	[ " N_wheels  ", " 3                               " ],
	[ " n_rollers ", " 4                               " ],
	[ " r_hub     ", " 0.05                            " ],
	[ " M_hub     ", " 0.15                            " ],
	[ " m_roller  ", " 0.05                            " ],
	[ " R_platf   ", " 0.15                            " ],
	[ " M_platf   ", " 1                               " ]
] $

log@info("Loading model...") $
use_default_simulation_parameters() $
/* load_params_from_file("???/simulation_parameters.mac") */
require@omni_with_rollers() $
log@info("Done loading model.") $

plotter : plot@console $
show(sol, plot_group_name) := plotter@show(sol, [ eval_string(concat("omni_plot@", plot_group_name)) ]) $
load_sol(name) := block(
	load(concat("../gcp_sol/", name, "/sol.lisp")),
	eval_string(concat(name, ": sol"))
) $

set_prod() := block(
	root_dir     : "../",
	sol_base_dir : concat(root_dir, "/sol"),
	gnuplot_command : "gnuplot",
	maxima_tempdir  : concat(root_dir, "/maxima_tempdir")
) $

log_program_finish() $



