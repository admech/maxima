/*
impact_simple_with_4_rollers_t_1000_self_rot_lo_def
impact_simple_with_4_rollers_t_1000_straight_lo_def
impact_simple_with_4_rollers_t_1000_wrench_lo_def
impact_simple_with_4_rollers_t_25_self_rot
impact_simple_with_5_rollers_t_1000_self_rot_lo_def
impact_simple_with_5_rollers_t_1000_straight_lo_def
impact_simple_with_5_rollers_t_1000_wrench_lo_def
impact_simple_with_5_rollers_t_100_straight
impact_simple_with_5_rollers_t_100_wrench
impact_simple_with_5_rollers_t_25_self_rot

for sol in `ls ../gcp_sol/_ready/ | grep impact`; do echo $sol; maxima --batch-string="sol_name_to_explore=$sol; batchload(\"reactions.mac\") quit();"; done;

*/

/*
sol_name_to_explore : "impact_simple_with_4_rollers_t_25_self_rot" $
*/

dir_with_solutions_on_local_machine: "/Users/data/Yandex.Disk/work/aspa/zobova/maxima/gcp_sol/_ready" $
dir_with_solution: concat(dir_with_solutions_on_local_machine, "/", sol_name_to_explore) $

/*
  Modules are needed to isolate namespaces and to manage dependencies.
  (note: dependencies of module.mac are loaded with batchload).
*/
print("______________________________") $
print("______________________________") $
print("______________________________") $
print("") $

/*
sol_dir : "smoke" $
*/
sol_dir : dir_with_solution $

batchload("util/lang/extensions.mac") $
batchload("util/infra/env.mac") $
batchload("util/lang/module.mac") $

require@logging() $
require@pipeline() $
require@model() $

log : get_logger("main", log_level_info) $

log@debug(hr()) $

log_program_start() $

DEFAULT_SIMULATION_PARAMETERS : [
  [ " model         ", " omni_with_rollers               " ],

  [ " how_to_switch ", " \"apply_impact_theory\"         " ],
  [ " calc_and_log_delta_T ", " false                    " ],

  [ " batches       ", " makelist(0.1*i, i, 1, 10)       " ],
  [ " step          ", " 0.01                            " ],

  [ " nu_0          ", " [ 0, 0, 1 ]                     " ],
  [ " chi_0         ", " makelist( -%pi/4+0.1, i, 1, 3)  " ],
  [ " coords_0      ", " [ 0, 0, 0 ]                     " ],

  [ " N_wheels      ", " 3                               " ],
  [ " n_rollers     ", " 4                               " ],
  [ " r_hub         ", " 0.05                            " ],
  [ " M_hub         ", " 0.15                            " ],
  [ " m_roller      ", " 0.05                            " ],
  [ " R_platf       ", " 0.15                            " ],
  [ " M_platf       ", " 1                               " ]
] $

log@info("Loading model...", sol_name_to_explore) $

/*
use_default_simulation_parameters() $
*/

use_simulation_parameters_from_dir(absolute_dir) := load_params_from_file(
  concat(absolute_dir, "/", "simulation_parameters.mac")
) $
use_simulation_parameters_from_dir(dir_with_solution) $


eval_string(concat("require@", get_global("model"), "()")) $

require@omni_with_rollers_recalculator() $

log@info("Done loading model.") $
log@info("") $


log@info("Initializing model...", B where real(params)) $
omni_vehicle: OmniVehicle(
  params,
  new(OmniInitials(
    append(get_global("nu_0"), makelist(0, i, len_nu - 3)),
    get_global("chi_0"),
    get_global("coords_0")
  )),
  new(Domain( 0, 0.2, get_global("step") )),
  get_global("how_to_switch")
) $
log@info("Done initializing model.") $


recalculate_impacts() $


log_program_finish() $



